{"version":3,"file":"static/js/305.99d83e6c.chunk.js","mappings":"sRAIaA,EAAYC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6BAG1BC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+EAMhBG,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAeO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iF,SCRpB,SAASM,IAAc,IAADC,EAC3BC,GAAWC,EAAAA,EAAAA,MAEjBC,GAA4BC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwCC,EAAAA,EAAAA,YAAUC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3CG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAA2B,QAAtBd,EAAGO,EAAOQ,IAAI,gBAAQ,IAAAf,EAAAA,EAAA,GAyBjC,OAhBAgB,EAAAA,EAAAA,YAAU,WACyB,SAAAC,IAW9B,OAX8BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA/B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAEkB,KAALT,EAAY,CAAAQ,EAAAE,KAAA,eAAAF,EAAAG,OAAA,wBAAAH,EAAAE,KAAA,GAISE,EAAAA,EAAAA,IAAiBZ,GAAM,OAA3CO,EAAWC,EAAAK,KACjBd,EAAgBQ,GAAYC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE5BO,QAAQC,IAAGR,EAAAM,IAAO,yBAAAN,EAAAS,OAAA,GAAAX,EAAA,mBAEzBY,MAAA,KAAAC,UAAA,EAZY,WACkBhB,EAAAe,MAAC,KAADC,UAAA,CAY/BC,EACJ,GAAE,CAACpB,KAEIqB,EAAAA,EAAAA,MAAC7C,EAAS,CAAA8C,SAAA,EACbD,EAAAA,EAAAA,MAAA,QAAME,SAxBW,SAAAC,GACjBA,EAAIC,iBACJhC,EAAOiC,IAAI,QAASF,EAAIG,OAAOC,YAAYC,MAAMC,qBACjDpC,EAAUD,EAEd,EAmBiC6B,SAAA,EACzBS,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,iBACxBF,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQV,SAAC,cAEzBxB,IAAiBiC,EAAAA,EAAAA,KAACnD,EAAI,CAAA0C,SACnBxB,EAAaoC,QAAQC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OACjCP,EAAAA,EAAAA,KAAA,MAAAT,UACIS,EAAAA,EAAAA,KAACjD,EAAI,CAACyD,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAKvD,GAAWmC,SAAEgB,KADjDD,EAEJ,QAErB,C","sources":["pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\n\nexport const Container = styled.section`\npadding: 0px 20px\n`\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: column;\ngap:5px;\n`\nexport const Link = styled(NavLink)`\ntext-decoration:none;\ncolor: black;\n&:hover{\n    color: orange;\n}\n`","import { fetchMovieByName } from \"Api\";\nimport { useEffect, useState } from \"react\";\nimport {  useLocation, useSearchParams } from \"react-router-dom\";\nimport { Container, List, Link } from \"./MoviesPage.styled\";\n\nexport default function MoviesPage() { \n    const location = useLocation()\n\n    const [params, setParams] = useSearchParams()\n    const [searchMovies, setSearchMovies] = useState()\n    const query = params.get(`query`) ?? ``;\n\n    const changeSearch = evt => {\n        evt.preventDefault()\n        params.set(`query`, evt.target.searchInput.value.toLocaleLowerCase())\n        setParams(params)\n   \n    }\n\n    useEffect(() => {\n        async function fetchSearchMovie() {\n            try {\n                 if (query === ``) {\n                     return\n                }\n                \n                const fetchMovies = await fetchMovieByName(query)\n                setSearchMovies(fetchMovies)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        fetchSearchMovie()\n    },[query])\n \n    return <Container>\n        <form onSubmit={changeSearch}>\n            <input type=\"text\" name=\"searchInput\"/>\n            <button type=\"submit\">Search</button>\n        </form>\n        {searchMovies && (<List>{\n            searchMovies.results.map(({ id, title }) =>\n                <li key={id}>\n                    <Link to={`/movies/${id}`} state={{ from:location }}>{title}</Link>\n                </li>)}</List>)}\n    </Container>\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Link","NavLink","_templateObject3","MoviesPage","_params$get","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","params","setParams","_useState","useState","_useState2","searchMovies","setSearchMovies","query","get","useEffect","_fetchSearchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","fetchMovies","_context","prev","next","abrupt","fetchMovieByName","sent","t0","console","log","stop","apply","arguments","fetchSearchMovie","_jsxs","children","onSubmit","evt","preventDefault","set","target","searchInput","value","toLocaleLowerCase","_jsx","type","name","results","map","_ref","id","title","to","concat","state","from"],"sourceRoot":""}